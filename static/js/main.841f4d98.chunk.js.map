{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["experiences","title","subtitle","timeRange","body","tags","color","projects","link","App","h","placeItems","className","p","w","minW","rounded","boxShadow","bg","spacing","isExternal","href","src","ml","fontWeight","fontSize","map","experience","borderLeftColor","borderLeftWidth","px","align","size","isInline","tag","opacity","variant","colorScheme","templateColumns","gap","project","colSpan","borderWidth","direction","noOfLines","flex","rowSpan","as","RiGithubFill","textAlign","IoIosMail","justify","RiTwitterFill","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","fonts","heading","styles","global","background","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.841f4d98.chunk.js","sourcesContent":["import {\n  Link,\n  Flex,\n  Box,\n  Heading,\n  Avatar,\n  Text,\n  Badge,\n  Divider,\n  Stack,\n  Grid,\n  GridItem,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { RiGithubFill, RiMediumFill, RiTwitterFill } from \"react-icons/ri\";\nimport { IoIosMail } from \"react-icons/io\";\nimport \"./App.css\";\n\nconst experiences = [\n  {\n    title: \"Target\",\n    subtitle: \"Senior Software Engineer\",\n    timeRange: \"2017 - 2021\",\n    body: `Worked on several UI's and API's across merchandise, supply chain, and dev-ops. \n  Led two-phase optimization effort, first identifying API bottlenecks via metrics and then optimizing via caching layer. Introduced user-role simulation feature that greatly reduced time spent on QA testing.\n  Facilitated learning culture via regular innovation meetings.\n  Contributed to innersource component library. \n  Built CodeSandbox clone for use with private npm registries.`,\n    tags: [\"TypeScript\", \"React\", \"Redux\", \"Angular\", \"Node\", \"Docker\"],\n    color: \"red\",\n  },\n  {\n    title: \"Rochester Institute of Technology\",\n    subtitle: \"BS in Computer Science - 3.95 GPA\",\n    timeRange: \"2012 - 2017\",\n    body: `Studied Computer Science at RIT in Rochester, NY. Completed 4 years of study and 1 year of internships.\n  Interned with Paychex as a Java Developer, Epic as a Data Scientist, and Target as a Software Engineer.\n  `,\n    tags: [\"JavaScript\", \"Python\", \"Java\", \"C\", \"Django\"],\n    color: \"orange\",\n  },\n];\n\nconst projects = [\n  {\n    title: \"Vernos\",\n    timeRange: \"2021\",\n    body: `I'm currently making a portfolio site builder with Next.js, Firebase, Chakra-UI, and framer-motion.`,\n    tags: [\"Chakra-UI\", \"Next.js\", \"Firebase\"],\n    color: \"blue\",\n    link: \"https://vernos.app\",\n  },\n  {\n    title: \"Elementos\",\n    timeRange: \"2020\",\n    body: `I published a framework-agnostic, reactive state management library.`,\n    tags: [\"TypeScript\", \"npm\"],\n    color: \"blue\",\n    link: \"https://malerba118.github.io/elementos-docs/\",\n  },\n  {\n    title: \"Snowbox\",\n    timeRange: \"2020\",\n    body: `I built a CodeSandbox clone for internal use at Target.\n  `,\n    tags: [\"Chakra-UI\", \"React\", \"Mongo\", \"Snowpack\"],\n    color: \"blue\",\n    link:\n      \"https://drive.google.com/file/d/1li65WH-6ZmBRtGVtgz2-eIjkjoLS7F4j/view?usp=sharing\",\n  },\n  {\n    title: \"react-particle-image\",\n    timeRange: \"2020\",\n    body: `I published a component that renders images as interactive particles.\n  `,\n    tags: [\"TypeScript\", \"React\", \"npm\"],\n    color: \"blue\",\n    link: \"https://github.com/malerba118/react-particle-image\",\n  },\n  {\n    title: \"Iconik Studio\",\n    timeRange: \"2018\",\n    body: `I built an svg editor via ionic-angular for iOS/Android.\n  `,\n    tags: [\"ionic\", \"Angular\", \"fabricjs\", \"PouchDB\"],\n    color: \"blue\",\n    link:\n      \"https://drive.google.com/file/d/1D2UOPYsPDcutjtIlckQrJJBv7H7uchOm/view?usp=sharing\",\n  },\n  {\n    title: \"Blog\",\n    timeRange: \"2017 - 2020\",\n    body: `I write tech articles for freeCodeCamp, HackerNoon, and Better Programming.\n  `,\n    tags: [\"JavaScript\", \"React\"],\n    color: \"blue\",\n    link: \"https://austinmalerba.medium.com/\",\n  },\n];\n\nfunction App() {\n  return (\n    <Grid h=\"100%\" placeItems=\"center\">\n      <Grid className=\"paper-container\" p=\"1in\" placeItems=\"center\">\n        <Box\n          className=\"paper\"\n          w=\"8.5in\"\n          minW=\"8.5in\"\n          h=\"11in\"\n          p=\".75in\"\n          rounded=\"md\"\n          boxShadow=\"lg\"\n          bg=\"white\"\n        >\n          <Stack spacing=\"5\">\n            <Flex>\n              <Link isExternal href=\"https://malerba118.github.io/resume/\">\n                <Avatar src=\"me2.JPG\" />\n              </Link>\n              <Box ml=\"3\">\n                <Text fontWeight=\"bold\">Austin Malerba</Text>\n                <Text fontSize=\"sm\" fontWeight=\"500\" color=\"gray.600\">\n                  Web Developer - USA - MST\n                </Text>\n              </Box>\n            </Flex>\n            <Divider />\n            {experiences.map((experience) => (\n              <Stack\n                key={experience.title}\n                borderLeftColor={`${experience.color}.300`}\n                borderLeftWidth=\"4px\"\n                px=\"2\"\n              >\n                <Box>\n                  <Flex align=\"center\">\n                    <Text size=\"sm\" fontWeight=\"bold\">\n                      {experience.title}\n                    </Text>\n                    <Text\n                      fontSize=\"xs\"\n                      fontWeight=\"600\"\n                      color=\"gray.600\"\n                      ml=\"2\"\n                    >\n                      ({experience.timeRange})\n                    </Text>\n                  </Flex>\n                  <Text fontSize=\"sm\" fontWeight=\"500\" color=\"gray.600\">\n                    {experience.subtitle}\n                  </Text>\n                </Box>\n                <Text fontSize=\"xs\" fontWeight=\"400\" color=\"gray.900\">\n                  {experience.body}\n                </Text>\n                <Stack isInline>\n                  {experience.tags.map((tag) => (\n                    <Badge\n                      opacity={0.75}\n                      fontSize=\".66rem\"\n                      variant=\"outline\"\n                      key={tag}\n                      colorScheme={experience.color}\n                    >\n                      {tag}\n                    </Badge>\n                  ))}\n                </Stack>\n              </Stack>\n            ))}\n            <Text fontSize=\"xl\" fontWeight=\"bold\">\n              Projects\n            </Text>\n            <Grid templateColumns=\"repeat(2, 1fr)\" gap={4}>\n              {projects.map((project) => (\n                <GridItem h=\"1.25in\" colSpan={1} borderWidth={1} rounded=\"md\">\n                  <Flex direction=\"column\" key={project.title} p={4} h=\"100%\">\n                    <Box>\n                      <Text size=\"sm\" fontWeight=\"bold\">\n                        <Link color=\"blue.500\" isExternal href={project.link}>\n                          {project.title}\n                        </Link>\n                      </Text>\n                    </Box>\n                    <Text\n                      noOfLines={2}\n                      flex={1}\n                      fontSize=\"xs\"\n                      fontWeight=\"400\"\n                      color=\"gray.900\"\n                    >\n                      {project.body}\n                    </Text>\n                    <Stack isInline>\n                      {project.tags.map((tag) => (\n                        <Badge\n                          opacity={0.75}\n                          fontSize=\".66rem\"\n                          variant=\"outline\"\n                          key={tag}\n                          colorScheme={\"blue\"}\n                        >\n                          {tag}\n                        </Badge>\n                      ))}\n                    </Stack>\n                  </Flex>\n                </GridItem>\n              ))}\n            </Grid>\n            <GridItem rowSpan=\"auto\" />\n            <Grid templateColumns=\"repeat(3, 1fr)\" gap={4}>\n              <Stack spacing=\"1\" isInline>\n                <Icon fontSize=\"lg\" as={RiGithubFill} />\n                <Text fontSize=\"xs\" fontWeight=\"600\" color=\"gray.600\">\n                  <Link isExternal href=\"https://github.com/malerba118\">\n                    malerba118\n                  </Link>\n                </Text>\n              </Stack>\n              <Stack spacing=\"1\" isInline textAlign=\"center\">\n                <Icon fontSize=\"lg\" as={IoIosMail} />\n                <Text fontSize=\"xs\" fontWeight=\"600\" color=\"gray.600\">\n                  austin.malerba@gmail.com\n                </Text>\n              </Stack>\n              <Stack spacing=\"1\" isInline justify=\"flex-end\">\n                <Icon fontSize=\"lg\" as={RiTwitterFill} />\n                <Text fontSize=\"xs\" fontWeight=\"600\" color=\"gray.600\">\n                  <Link isExternal href=\"https://twitter.com/MalerbaAustin\">\n                    Twitter\n                  </Link>\n                </Text>\n              </Stack>\n            </Grid>\n          </Stack>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\"\n\nconst theme = extendTheme({\n  fonts: {\n    heading: 'Poppins',\n    body: 'Poppins'\n  },\n  styles: {\n    global: {\n      \"html, body\": {\n        background: \"gray.100\",\n      },\n    },\n  },\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}